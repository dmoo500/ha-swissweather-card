name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Enable Corepack
      run: corepack enable
    
    - name: Install Yarn 4.9.2
      run: corepack install --global --cache-only yarn@4.9.2 
    
    - name: Check Yarn version
      run: yarn --version
    
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Run TypeScript type check
      run: yarn type-check
      
    - name: Run ESLint
      run: yarn lint
      
    - name: Check formatting
      run: yarn format:check
      
    - name: Build
      run: yarn build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/

  validate-hacs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: HACS validation
      uses: hacs/action@main
      with:
        category: plugin

  release:
    if: github.event_name == 'release'
    needs: [lint-and-test, validate-hacs]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Enable Corepack
      run: corepack enable
      
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Build
      run: yarn build
      
    - name: Create release asset
      run: |
        cd dist
        zip -r ../swissweather-card-${{ github.event.release.tag_name }}.zip .
        
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./swissweather-card-${{ github.event.release.tag_name }}.zip
        asset_name: swissweather-card-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
